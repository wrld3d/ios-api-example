/* No comment provided by engineer. */
"SampleTitle_ViewController" = "Embed a 3D map";

/* No comment provided by engineer. */
"SampleDescription_ViewController" = "Display a 3d map in a view controller";

/* No comment provided by engineer. */
"SampleTitle_MoveCamera" = "Move the camera";

/* No comment provided by engineer. */
"SampleDescription_MoveCamera" = "Simple camera movement";

/* No comment provided by engineer. */
"SampleTitle_AnimateCamera" = "Animate the camera";

/* No comment provided by engineer. */
"SampleDescription_AnimateCamera" = "Move the camera with animation";

/* No comment provided by engineer. */
"SampleTitle_MoveCameraToIndoor" = "Move the camera to an indoor map";

/* No comment provided by engineer. */
"SampleDescription_MoveCameraToIndoor" = "Move the camera to a point on an indoor map";

/* No comment provided by engineer. */
"SampleTitle_AnimateCameraToIndoor" = "Animate the camera to an indoor map";

/* No comment provided by engineer. */
"SampleDescription_AnimateCameraToIndoor" = "Move the map camera with animation to a point on an indoor map";

/* No comment provided by engineer. */
"SampleTitle_FrameCamera" = "Frame an area";

/* No comment provided by engineer. */
"SampleDescription_FrameCamera" = "Move the map camera to frame an area";

/* No comment provided by engineer. */
"SampleTitle_QueryCamera" = "Query camera location and altitude";

/* No comment provided by engineer. */
"SampleDescription_QueryCamera" = "Obtain the current camera center coordinate and altitude";

/* No comment provided by engineer. */
"SampleTitle_MapTappedNotification" = "Pick a point on the map";

/* No comment provided by engineer. */
"SampleDescription_MapTappedNotification" = "Obtain the coordinates of a point on the map that is tapped by the user";

/* No comment provided by engineer. */
"SampleTitle_ExitIndoorMap" = "Exit an indoor map";

/* No comment provided by engineer. */
"SampleDescription_ExitIndoorMap" = "Exiting an indoor map";

/* No comment provided by engineer. */
"SampleTitle_IndoorMapDisplayName" = "Query the name of an indoor map";

/* No comment provided by engineer. */
"SampleDescription_IndoorMapDisplayName" = "After entering an indoor map, display its name";

/* No comment provided by engineer. */
"SampleTitle_InitialStreamingCompleteNotification" = "Map streaming completed notification";

/* No comment provided by engineer. */
"SampleDescription_InitialStreamingCompleteNotification" = "Receive notification that the loading of map resources for the initial scene has completed";

/* No comment provided by engineer. */
"SampleTitle_AddIndoorControl" = "Animate indoor maps with a slider";

/* No comment provided by engineer. */
"SampleDescription_AddIndoorControl" = "Optional, beautiful user experience for controlling indoor maps";

/* No comment provided by engineer. */
"SampleTitle_AddCustomIndoorControl" = "Control indoor map floors";

/* No comment provided by engineer. */
"SampleDescription_AddCustomIndoorControl" = "Move between indoor map floors";

/* No comment provided by engineer. */
"SampleTitle_AddMarker" = "Add a marker";

/* No comment provided by engineer. */
"SampleDescription_AddMarker" = "Display a marker on the map";

/* No comment provided by engineer. */
"SampleTitle_MarkerCustomIcon" = "Add a marker with a different icon";

/* No comment provided by engineer. */
"SampleDescription_MarkerCustomIcon" = "Display a marker on the map with a specific icon";

/* No comment provided by engineer. */
"SampleTitle_MarkerWithElevation" = "Add a marker with an elevation";

/* No comment provided by engineer. */
"SampleDescription_MarkerWithElevation" = "Display a marker on the map at a height above the ground";

/* No comment provided by engineer. */
"SampleTitle_MarkerWithAbsoluteAltitude" = "Add a marker with an altitude";

/* No comment provided by engineer. */
"SampleDescription_MarkerWithAbsoluteAltitude" = "Display a marker on the map with a height above sea level";

/* No comment provided by engineer. */
"SampleTitle_AddIndoorMarker" = "Add an indoor marker";

/* No comment provided by engineer. */
"SampleDescription_AddIndoorMarker" = "Display a marker on an indoor map";

/* No comment provided by engineer. */
"SampleTitle_MarkerChangeText" = "Change the title of a marker";

/* No comment provided by engineer. */
"SampleDescription_MarkerChangeText" = "Alter the text on a marker after adding to the map";

/* No comment provided by engineer. */
"SampleTitle_MarkerChangeLocation" = "Change the location of a marker";

/* No comment provided by engineer. */
"SampleDescription_MarkerChangeLocation" = "Alter the location of a marker after adding to the map";

/* No comment provided by engineer. */
"SampleTitle_MarkerTappedNotification" = "Select a marker";

/* No comment provided by engineer. */
"SampleDescription_MarkerTappedNotification" = "Get notified when the user taps on a marker";

/* No comment provided by engineer. */
"SampleTitle_MarkerChangeDrawOrder" = "Change the draw order of markers";

/* No comment provided by engineer. */
"SampleDescription_MarkerChangeDrawOrder" = "Configure and alter the draw order of markers. Draw order determines precedence when markers overlap";

/* No comment provided by engineer. */
"SampleTitle_PositionViewOnMap" = "Position a View on the map";

/* No comment provided by engineer. */
"SampleDescription_PositionViewOnMap" = "Use a positioner to locate a View at a point on the map";

/* No comment provided by engineer. */
"SampleTitle_PositionCodeCreatedViewOnMap" = "Position a code-created View on the map";

/* No comment provided by engineer. */
"SampleDescription_PositionCodeCreatedViewOnMap" = "Position a code-created View on the map and use a positioner to locate it";

/* No comment provided by engineer. */
"SampleTitle_AddPolygon" = "Add a polygon";

/* No comment provided by engineer. */
"SampleDescription_AddPolygon" = "Display a polygon on the map";

/* No comment provided by engineer. */
"SampleTitle_AddPolygonIndoors" = "Add a polygon to an indoor map";

/* No comment provided by engineer. */
"SampleDescription_AddPolygonIndoors" = "Display a polygon inside a building";

/* No comment provided by engineer. */
"SampleTitle_PolygonWithInteriorPolygons" = "Add a polygon with interior polygons";

/* No comment provided by engineer. */
"SampleDescription_PolygonWithInteriorPolygons" = "Display a polygon on the map with interior polygons";

/* No comment provided by engineer. */
"SampleTitle_PolygonWithElevation" = "Add a polygon with elevation";

/* No comment provided by engineer. */
"SampleDescription_PolygonWithElevation" = "Display a polygon on the map at a height above the ground";

/* No comment provided by engineer. */
"SampleTitle_BlueSphereChangeLocation" = "Change the location of the blue sphere";

/* No comment provided by engineer. */
"SampleDescription_BlueSphereChangeLocation" = "Move the blue sphere to a different point on the map";

/* No comment provided by engineer. */
"SampleTitle_BlueSphereChangeHeading" = "Change the heading of the blue sphere";

/* No comment provided by engineer. */
"SampleDescription_BlueSphereChangeHeading" = "Alter the heading the blue sphere is facing";

/* No comment provided by engineer. */
"SampleTitle_BlueSphereChangeElevation" = "Change the elevation of the blue sphere";

/* No comment provided by engineer. */
"SampleDescription_BlueSphereChangeElevation" = "Display a blue sphere on the map at a height above the ground";

/* No comment provided by engineer. */
"SampleTitle_BlueSphereIndoors" = "Move the blue sphere indoors";

/* No comment provided by engineer. */
"SampleDescription_BlueSphereIndoors" = "Display a blue sphere inside an indoor map";

/* No comment provided by engineer. */
"SampleTitle_AddPolyline" = "Add a polyline";

/* No comment provided by engineer. */
"SampleDescription_AddPolyline" = "Display a polyline on the map";

/* No comment provided by engineer. */
"SampleTitle_AddPolylineIndoors" = "Add a polyline to an indoor map";

/* No comment provided by engineer. */
"SampleDescription_AddPolylineIndoors" = "Display a polyline inside a building";

/* No comment provided by engineer. */
"SampleTitle_SearchExample" = "Search for POIs";

/* No comment provided by engineer. */
"SampleDescription_SearchExample" = "Use the POI service to find POIs on the map matching a certain query";

/* No comment provided by engineer. */
"SampleTitle_CancelSearch" = "Cancel a POI search";

/* No comment provided by engineer. */
"SampleDescription_CancelSearch" = "Cancel an ongoing search before it completes";

/* No comment provided by engineer. */
"SampleTitle_LoadMapsceneExample" = "Load a Mapscene";

/* No comment provided by engineer. */
"SampleDescription_LoadMapsceneExample" = "Use the Mapscene service to load and apply a mapscene";

/* No comment provided by engineer. */
"SampleTitle_FindOutdoorRoute" = "Find an outdoor route";

/* No comment provided by engineer. */
"SampleDescription_FindOutdoorRoute" = "Use the routing service to find a route between two places outdoors";

/* No comment provided by engineer. */
"SampleTitle_FindIndoorRoute" = "Find an indoor route";

/* No comment provided by engineer. */
"SampleDescription_FindIndoorRoute" = "Use the routing service to find a route inside a building";

/* No comment provided by engineer. */
"SampleTitle_FindMultipartRoute" = "Find a multipart route";

/* No comment provided by engineer. */
"SampleDescription_FindMultipartRoute" = "Use the routing service to find a route from inside one building to another";

/* No comment provided by engineer. */
"SampleTitle_CancelRoutingQuery" = "Cancel a routing query";

/* No comment provided by engineer. */
"SampleDescription_CancelRoutingQuery" = "Cancel a routing service query before it completes";

/* No comment provided by engineer. */
"SampleTitle_RouteView" = "Display a route";

/* No comment provided by engineer. */
"SampleDescription_RouteView" = "Display routes on the map using the RouteView widget";

/* No comment provided by engineer. */
"SampleTitle_RouteViewStyle" = "Change the style of a route view";

/* No comment provided by engineer. */
"SampleDescription_RouteViewStyle" = "Change the color and width of a route view dynamically";

/* No comment provided by engineer. */
"SampleTitle_RouteViewMarkers" = "Draw markers along a Route";

/* No comment provided by engineer. */
"SampleDescription_RouteViewMarkers" = "Add markers to the map for each step of the route";

/* No comment provided by engineer. */
"SampleTitle_AddBuildingHighlight" = "Add a building highlight";

/* No comment provided by engineer. */
"SampleDescription_AddBuildingHighlight" = "Add a highlight for a building";

/* No comment provided by engineer. */
"SampleTitle_RemoveBuildingHighlight" = "Remove a building highlight";

/* No comment provided by engineer. */
"SampleDescription_RemoveBuildingHighlight" = "Remove a building highlight that was previously added to the map";

/* No comment provided by engineer. */
"SampleTitle_QueryBuildingInformation" = "Query building information";

/* No comment provided by engineer. */
"SampleDescription_QueryBuildingInformation" = "Obtain information about a building at a location and place a marker above its centroid";

/* No comment provided by engineer. */
"SampleTitle_PlaceObjectsOnBuildings" = "Place objects on buildings";

/* No comment provided by engineer. */
"SampleDescription_PlaceObjectsOnBuildings" = "Query the altitude of a building in order to position a marker";

/* No comment provided by engineer. */
"SampleTitle_PickingBuildings" = "Picking buildings";

/* No comment provided by engineer. */
"SampleDescription_PickingBuildings" = "Highlight buildings by tapping on them";
